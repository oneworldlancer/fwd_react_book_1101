{"version":3,"sources":["components/SearchBook.jsx","components/BookBox.jsx","components/BookShelf.jsx","components/ShelfList.jsx","components/NoPage.jsx","iUtilityManager/iDebugManager.js","BooksAPI.js","App.js","index.js"],"names":["SearchBook","className","to","type","placeholder","BookBox","iBookView","style","width","height","backgroundImage","imageLinks","thumbnail","value","disabled","title","authors","id","BookShelf","iTitle","iShelfCategory","iBookByShelfCategory","iBooksList","filter","iBook","shelf","map","ShelfList","console","log","NoPage","iDebugManager","strMessage","error","objMessage","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","App","useState","setIBooksList","useEffect","fetch","then","res","json","data","books","iBooks","iDebug_Message","path","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be447104.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchBook = () => {\r\n  //console.log(iContacts);\r\n  //onClick={() => setShowSearchpage(!showSearchPage)}\r\n  //return <h1>Hello, Shaymaa</h1>;\r\n\r\n  //      onClick={() => setShowSearchpage(!showSearchPage)}\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        {/* <a\r\n              className=\"close-search\"\r\n        \r\n            >\r\n              Close\r\n            </a> */}\r\n        <Link to=\"/\" className=\"close-search\">Close</Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\"></ol>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\n/* iBook_Search.propTypes = {\r\n    //iContacts: PropTypes.array.isRequired,\r\n    //: PropTypes.func.isRequired,\r\n}; */\r\n\r\nexport default SearchBook;","import React from \"react\";\r\n\r\nconst BookBox = ({ iBookView }) => {\r\n    return (\r\n\r\n        <li key={iBookView.id}>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div\r\n                        className=\"book-cover\"\r\n                        style={{\r\n                            width: 128,\r\n                            height: 193,\r\n                            backgroundImage: `url(${iBookView.imageLinks.thumbnail})`,\r\n                        }}\r\n                    ></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <select>\r\n                            <option value=\"none\" disabled>\r\n                                Move to...\r\n                            </option>\r\n                            <option value=\"currentlyReading\">\r\n                                Currently Reading\r\n                            </option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{iBookView.title}</div>\r\n                <div className=\"book-authors\">{iBookView.authors[0]}</div>\r\n            </div>\r\n        </li>\r\n\r\n    );\r\n};\r\n\r\nexport default BookBox;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport BookBox from \"./BookBox\";\r\n\r\nconst BookShelf = ({\r\n    iTitle,\r\n    iShelfCategory,\r\n    iBooksList }) => {\r\n\r\n    const iBookByShelfCategory = iBooksList.filter(iBook => iBook.shelf === iShelfCategory);\r\n\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{iTitle}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n\r\n                    {iBookByShelfCategory.map((iBookView) => \r\n                        <BookBox iBookView={iBookView} />\r\n                    )}\r\n\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookShelf;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf.jsx\";\r\n\r\nconst ShelfList = ({ iBooksList }) => {\r\n\tconsole.log(\"ShelfList == \" + { iBooksList });\r\n\r\n\t//onClick={() => setShowSearchpage(!showSearchPage)}\r\n\treturn (\r\n\t\t<div className=\"list-books\">\r\n\t\t\t<div className=\"list-books-title\">\r\n\t\t\t\t<h1>MyReads</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"list-books-content\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* Book-Shelves */}\r\n\t\t\t\t\t{/* (1) Currently Reading */}\r\n\t\t\t\t\t<BookShelf\r\n\t\t\t\t\t\tiTitle=\"Currently Reading\"\r\n\t\t\t\t\t\tiShelfCategory=\"currentlyReading\"\r\n\t\t\t\t\t\tiBooksList={iBooksList}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* (2) Want to Read */}\r\n\t\t\t\t\t<BookShelf\r\n\t\t\t\t\t\tiTitle=\"Want to Read\"\r\n\t\t\t\t\t\tiShelfCategory=\"wantToRead\"\r\n\t\t\t\t\t\tiBooksList={iBooksList}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* (3) Read */}\r\n\t\t\t\t\t<BookShelf\r\n\t\t\t\t\t\tiTitle=\"Read\"\r\n\t\t\t\t\t\tiShelfCategory=\"read\"\r\n\t\t\t\t\t\tiBooksList={iBooksList}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"open-search\">\r\n\t\t\t\t<Link to=\"/search\">Add a book</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n/* onClick={() => setShowSearchpage(!showSearchPage)} */\r\n/* list.propTypes = {\r\n    //iContacts: PropTypes.array.isRequired,\r\n    //: PropTypes.func.isRequired,\r\n}; */\r\n\r\nexport default ShelfList;\r\n","import React from \"react\";\r\n\r\nconst NoPage = ( ) => {\r\nreturn <h1>404 Not-Found</h1>;\r\n};\r\n\r\nexport default NoPage;","export class iDebugManager {\n\n  \n\n  /* iDebug_Message */\n  static iDebug_Message(strMessage ) {\n    try {\n      console.log(\"MSG:::  \" + strMessage);\n\n      if (strMessage === null) {\n        return true;\n      } else if (strMessage === \"\") {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error ) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  /* iObject_Message */\n  static iObject_Message(objMessage ) {\n    try {\n      console.log(objMessage);\n\n      if (objMessage === null) {\n        return true;\n      } else if (objMessage === \"\") {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error ) {\n      console.log(error);\n      return false;\n    }\n  }\n}\n\nexport default iDebugManager;\n","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport SearchBook from \"./components/SearchBook.jsx\";\nimport ShelfList from \"./components/ShelfList.jsx\";\nimport NoPage from \"./components/NoPage.jsx\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport iDebugManager from \"./iUtilityManager/iDebugManager\";\n\nimport * as iBookManager from \"./BooksAPI\";\nconst App = () => {\n\t\n// #region \"States-List\"\n\n const [showSearchPage, setShowSearchpage] = useState(false);\n\n \n\t\n   const [iBooksList, setIBooksList] = useState([]);\n\n\t\n// #endregion \n \n\n// #region \"\"\n\n\ntry {\n  \n} catch (error) {\n  \n}\n\n\n// #endregion \n\n// #region \"API\"\n\n  useEffect(() => {\n\t\t//.title = `You clicked ${count} times`;\n\ntry {\n  iBookManager.getAll()\n  .then((iBooks) => {\n    setIBooksList(iBooks);\n    //console.log(iBooks);\n  \n  });\n  \n\n  \n\n} catch (error) {\n iDebugManager.iDebug_Message(error); \n}\n\n\n\n\t});\n  \n// #endregion\n\n\n// #region \"\"\n\n\n  \n// #endregion\n \n\n// #region \"\"\n\n\n\n// #endregion\n  \n  \n  \n  \n  return (\n\t\t<div className=\"app\">\n\t\t\t<BrowserRouter>\n\t\t\t\n        <Routes>\n\t\t\t\t\t\n          <Route path=\"*\" element={<NoPage />} />\n\t\t\t\t\t\n          <Route path=\"/search\" element={<SearchBook />} />\n\t\t\t\t\t\n          <Route exact path=\"/\" element={<ShelfList \n          iBooksList={iBooksList} />}></Route>\n\t\t\t\n      \t</Routes>\n\t\t\t\n      </BrowserRouter>\n\t\t</div>\n\t\t/* \t\t<div className=\"app\">\n\t\t\t{showSearchPage ? (\n\t\t\t\t<SearchBook />\n\t\t\t) : (\n\t\t\t\n\t\t\t\t<div className=\"list-books\">\n\t\t\t\t\t<div className=\"list-books-title\">\n\t\t\t\t\t\t<h1>MyReads</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"list-books-content\">\n            <BookList/>\n\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"open-search\">\n\t\t\t\t\t\t<a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div> */\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}